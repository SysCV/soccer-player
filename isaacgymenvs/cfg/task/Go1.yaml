# used to create the object
name: Go1

physics_engine: ${..physics_engine}

env:
  numEnvs: ${resolve_default:8000,${...num_envs}}
  envSpacing: 2. # [m]

  wandb_extra_log: True
  wandb_extra_log_period: 8000

  randomization: true
  randomization_freq: 10000 # 1s = 50 steps

  plot_reward_debug: true
  plot_reward_name: "sound_posi"

  enable_sound: false
  sound_model_path: "./dataset/mlp.pt"

  obs_history: true
  history_length: 15

  action_lag_step: 1

  observe_contact_states: false

  obs_num:
    # base_v: 3
    # base_w: 3
    gravity: 3
    command: 3
    dof_p: 12
    dof_v: 12
    pre_act: 12
    gait_sin_indict: 4
    # contact_state: 4

  add_noise: true
  obs_noise:
    gravity: 0.05
    command: 0
    dof_p: 0.01
    dof_v: 0.1
    pre_act: 0
    gait_sin_indict: 0

  gait_condition:
    # trotting [0.5,0,0] pacing [0,0,0.5] walking [0.0,0.25,0.5]
    phases: 0.5
    offsets: 0.0
    bounds: 0.0
    kappa: 0.07
    duration: 0.5 # for stance phase
    frequency: 3.0

  obs_privilege: true
  privilege_obs_num:
    base_v: 3
    base_w: 3
    dof_stiff: 12
    dof_damp: 12
    payload: 1
    com: 3
    # friction: 4
    restitution: 4

  act_num: 12

  clipObservations: 5.0
  clipActions: 1.0

  plane:
    staticFriction: 0.0 # [-] # because we can't change the friction of the robot, and the friction of the contact pair is the mean of the two
    dynamicFriction: 0.0 # [-]

    restitution: 0.0 # [-]

  baseInitState:
    pos: [0.0, 0.0, 0.35] # x,y,z [m]
    rot: [0.00, 0.0, 0.0, 1.0] # x,y,z,w [quat]
    vLinear: [0.0, 0.0, 0.0] # x,y,z [m/s]
    vAngular: [0.0, 0.0, 0.0] # x,y,z [rad/s]

  randomCommandVelocityRanges:
    linear_x: [-2.0, 2.0] # min max [m/s]
    linear_x_init: [-1.0, 1.0] # min max [m/s]
    num_bins_x: 21 # 20

    linear_y: [-0.6, 0.6] # min max [m/s]
    linear_y_init: [-0.6, 0.6] # min max [m/s]
    num_bins_y: 1 # 20

    yaw: [-3.0, 3.0] # min max [rad/s]
    yaw_init: [-1.0, 1.0] # min max [rad/s]
    num_bins_yaw: 21 # 5

  control:
    type: "pose_pd" # pose_pd / actuator_net
    # PD Drive parameters:
    stiffness: 20.0 # [N*m/rad]
    damping: 0.5 # [N*m*s/rad]
    actionScale: 0.5
    hipAddtionalScale: 0.5
    controlFrequencyInv: 1 # control step every dt

  random_params:
    stiffness:
      enable: true
      range_low: 19.
      range_high: 21.
    damping:
      enable: true
      range_low: 0.45
      range_high: 0.55
    friction:
      enable: false
      range_low: 0.1
      range_high: 4.0
    restitution:
      enable: true
      range_low: 0.0
      range_high: 0.5
    com:
      enable: true
      range_low: -0.15
      range_high: 0.15
    payload:
      enable: true
      range_low: -1.0
      range_high: 2.0
    push:
      enable: true
      interval_s: 7
      max_vel: 0.5

  defaultJointAngles: # = target angles when action = 0.0
    FL_hip_joint: 0.1 # [rad]
    RL_hip_joint: 0.1 # [rad]
    FR_hip_joint: -0.1 # [rad]
    RR_hip_joint: -0.1 # [rad]

    FL_thigh_joint: 0.8 # [rad]
    RL_thigh_joint: 1. # [rad]
    FR_thigh_joint: 0.8 # [rad]
    RR_thigh_joint: 1. # [rad]

    FL_calf_joint: -1.5 # [rad]
    RL_calf_joint: -1.5 # [rad]
    FR_calf_joint: -1.5 # [rad]
    RR_calf_joint: -1.5 # [rad]

  # for a1
  urdfAsset:
    collapseFixedJoints: True
    fixBaseLink: False
    defaultDofDriveMode: 4 # see GymDofDriveModeFlags (0 is none, 1 is pos tgt, 2 is vel tgt, 4 effort)

  rewards:
    only_positive_rewards_ji22_style: True
    sigma_rew_neg: 0.02 # is important!!

    rewardScales:
      tracking_lin_vel: 1.0
      tracking_ang_vel: 0.5
      # feet_air_time: 1.0

      orientation: -5.0
      lin_vel_z: -0.02

      dof_acc: -2.5e-7
      dof_vel: -0.0001
      torque: -0.0001
      # ground_impact_neg: -1 # -1e-4
      # ground_impact_posi: 0.5 # 0.1
      # ground_speed_neg: -1 # -1.0
      # ground_speed_posi: 0.5 # 0.1
      # sound_posi: 0.5 # 0.1

      # action_rate: -0.01
      # now is the same as action_rate, but when have lag, it will be different
      action_smoothness_1: -0.1
      action_smoothness_2: -0.1

      # base_height: -0.001

      # walk this way, this replace the feet air time
      tracking_contacts_shaped_force: 4.0
      tracking_contacts_shaped_vel: 4.0
      raibert_heuristic: -10.0
      # feet_clearance: -30.0

    rewardParams:
      tracking_lin_vel:
        sigma: 0.25
      tracking_ang_vel:
        sigma: 0.25
      base_height:
        target: 0.30
      feet_air_time:
        baseline: 0.5
      tracking_contacts_shaped_force:
        sigma: 100.
      tracking_contacts_shaped_vel:
        sigma: 10.
      ground_speed:
        near_ground_threshold: 0.07
      feet_clearance:
        height: -0.02

  learn:
    # normalization
    linearVelocityScale: 0.3
    angularVelocityScale: 0.25
    dofPositionScale: 1.0
    dofVelocityScale: 0.05

    # episode length in seconds
    episodeLength_s: 20

    curriculum:
      resample_s: 5
      success_threshold:
        tracking_lin_vel: 0.7
        tracking_ang_vel: 0.8
        tracking_contacts_shaped_force: 0.9
        tracking_contacts_shaped_vel: 0.9
      local_range: [0.6, 0.6, 0.6]

  # viewer cam:
  viewer:
    refEnv: 0
    pos: [0, 0, 4] # [m]
    lookat: [1., 1, 3.3] # [m]

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False

sim:
  dt: 0.02
  substeps: 2
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 4
    num_velocity_iterations: 1
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 100.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  randomize: False
